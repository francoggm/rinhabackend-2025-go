x-server-template: &server-template
  build: .
  environment:
    - PAYMENT_WORKERS_COUNT=30
    - PAYMENT_WORKERS_EVENTS_BUFFER_SIZE=3000
    - STORAGE_WORKERS_COUNT=20
    - STORAGE_WORKERS_EVENTS_BUFFER_SIZE=2000
    - SERVER_PORT=8080
    - DB_HOST=db
    - DB_PORT=5432
    - DB_USER=postgres
    - DB_PASSWORD=password
    - DB_NAME=payments
    - PAYMENT_DEFAULT_URL=http://payment-processor-default:8080
    - PAYMENT_FALLBACK_URL=http://payment-processor-fallback:8080
  depends_on:
    db:
      condition: service_healthy
  restart: unless-stopped
  networks:
    - backend
    - payment-processor

services:
  load-balancer:
    image: nginx:alpine
    volumes:
      - ./project/load-balancer/nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - "9999:80"
    networks:
      - backend
    depends_on:
      - server-1
      - server-2
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: "0.2"
          memory: 30M

  server-1:
    <<: *server-template
    container_name: server-1
    deploy:
      resources:
        limits:
          cpus: "0.4"
          memory: 60M
  server-2:
    <<: *server-template
    container_name: server-2
    deploy:
      resources:
        limits:
          cpus: "0.4"
          memory: 60M

  db:
    image: postgres:16-alpine
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=payments
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./project/db/init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./project/db/postgresql.conf:/etc/postgresql/postgresql.conf
    ports:
      - "5432:5432"
    networks:
      - backend
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d payments"]
      interval: 10s
      timeout: 5s
      retries: 5
    deploy:
      resources:
        limits:
          cpus: "0.5"
          memory: 200M
    command: postgres -c config_file=/etc/postgresql/postgresql.conf

volumes:
  postgres_data:

networks:
  backend:
    driver: bridge
  # payment-processor must be up before starting backend network
  payment-processor:
    external: true
